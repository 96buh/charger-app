import { I18n } from "i18n-js";
import * as Localization from "expo-localization";

const translations = {
  en: {
    dataSource: "Data Source",
    local: "Local",
    esp32: "ESP32",
    esp32Settings: "ESP32 Server Settings",
    ipAddress: "IP Address",
    port: "Port",
    apiPath: "API Path",
    exampleIp: "e.g. 192.168.1.100",
    defaultPort: "default 8080",
    tempThreshold: "Temperature Alert Threshold (%{tempThreshold}\u00B0C)",
    language: "Language",
    english: "English",
    chinese: "Traditional Chinese",
    realtimeDisplay: "Real-time Data",
    historySearch: "Charge History",
    errorRecord: "Error Log",
    settings: "Settings",
    status: "Status: %{label}",
    abnormal: "Abnormal: %{label}",
    notCharging: "Not Charging",
    power: "Power",
    current: "Current",
    voltage: "Voltage",
    temperature: "Temp",
    currentLabel: "Current (A)",
    voltageLabel: "Voltage (V)",
    powerLabel: "Power (W)",
    temperatureLabel: "Temp (\u00B0C)",
    days7: "7 days",
    days30: "30 days",
    clearHistory: "Clear History",
    noHistory: "No charge records",
    hours24: "24 hours",
    custom: "Custom",
    all: "All",
    allTypes: "All types",
    searchReason: "Search reason",
    noErrorLogs: "No error records",
    noMatchingLogs: "No matching records",
    selectAll: "Select All",
    clearSelection: "Clear Selection",
    deleteSelection: "Delete Selected",
    normal: "Normal",
    unknown: "Unknown",
    rustedCable: "Cable Rust",
    rustedTransformer: "Transformer Rust",
    temperatureAbnormal: "Temperature Abnormal",
    tempOverThreshold: "Transformer temperature exceeds %{temp}\u00B0C",
  },
  zh: {
    dataSource: "\u8CC7\u6599\u4F86\u6E90",
    local: "\u672C\u6A5F",
    esp32: "ESP32",
    esp32Settings: "ESP32 \u4F3A\u670D\u5668\u8A2D\u5B9A",
    ipAddress: "IP \u5730\u5740",
    port: "Port",
    apiPath: "API \u8DEF\u5F91",
    exampleIp: "\u4F8B\u5982 192.168.1.100",
    defaultPort: "\u9810\u8A2D 8080",
    tempThreshold:
      "\u6EAB\u5EA6\u7570\u5E38\u901A\u77E5\u9580\u6ABB (%{tempThreshold}\u00B0C)",
    language: "\u8A9E\u8A00",
    english: "\u82F1\u6587",
    chinese: "\u7E41\u9AD4\u4E2D\u6587",
    realtimeDisplay: "\u5373\u6642\u8A0A\u606F\u986F\u793A",
    historySearch: "\u6B77\u53F2\u5145\u96FB\u67E5\u8A62",
    errorRecord: "\u6B77\u53F2\u7570\u5E38\u7D00\u9304",
    settings: "\u8A2D\u5B9A",
    status: "\u72C0\u614B\uFF1A%{label}",
    abnormal: "\u7570\u5E38\uFF1A%{label}",
    notCharging: "\u672A\u5145\u96FB",
    power: "\u529F\u7387",
    current: "\u96FB\u6D41",
    voltage: "\u96FB\u58D3",
    temperature: "\u6EAB\u5EA6",
    currentLabel: "\u96FB\u6D41 (A)",
    voltageLabel: "\u96FB\u58D3 (V)",
    powerLabel: "\u529F\u7387 (W)",
    temperatureLabel: "\u6EAB\u5EA6 (\u00B0C)",
    days7: "7\u5929",
    days30: "30\u5929",
    clearHistory: "\u6E05\u9664\u7D00\u9304",
    noHistory: "\u6C92\u6709\u5145\u96FB\u8A18\u9304",
    hours24: "24\u5C0F\u6642",
    custom: "\u81EA\u8A02",
    all: "\u5168\u90E8",
    allTypes: "\u5168\u90E8\u7A2E\u985E",
    searchReason: "\u641C\u5C0B\u539F\u56E0",
    noErrorLogs: "\u76EE\u524D\u6C92\u6709\u7570\u5E38\u7D00\u9304",
    noMatchingLogs: "\u6C92\u6709\u7B26\u5408\u689D\u4EF6\u7684\u7D00\u9304",
    selectAll: "\u5168\u9078",
    clearSelection: "\u6E05\u9664\u9078\u53D6",
    deleteSelection: "\u522A\u9664\u9078\u53D6",
    normal: "\u6B63\u5E38",
    unknown: "\u672A\u77E5",
    rustedCable: "\u5145\u96FB\u7DDA\u751F\u93FD",
    rustedTransformer: "\u8F49\u63DB\u5668\u751F\u93FD",
    temperatureAbnormal: "\u6EAB\u5EA6\u7570\u5E38",
    tempOverThreshold:
      "\u8F49\u63DB\u5668\u6EAB\u5EA6\u8D85\u904E%{temp}\u5EA6",
  },
};

const i18n = new I18n(translations);
i18n.enableFallback = true;
const locale =
  Localization.getLocales()[0]?.languageCode === "zh" ? "zh" : "en";
i18n.locale = locale;

export default i18n;
